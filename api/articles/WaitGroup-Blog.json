{"title":"浅记sync.WaitGroup使用时的一些错误","uid":"f8e8d6bc4eb4a88923ac2738fbdf0bbf","slug":"WaitGroup-Blog","date":"2022-02-17T08:15:59.000Z","updated":"2022-07-17T08:59:24.539Z","comments":true,"path":"api/articles/WaitGroup-Blog.json","keywords":null,"cover":"https://gimg2.baidu.com/image_search/src=http%3A%2F%2Fwww.opss.cn%2Fwp-content%2Fuploads%2F2020%2F03%2F202003130037042.jpg&refer=http%3A%2F%2Fwww.opss.cn&app=2002&size=f9999,10000&q=a80&n=0&g=0n&fmt=auto?sec=1660637907&t=d526a07a4c3db6183eb24202caa43381","content":"<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>此处所使用的代码均为演示出现的错误</p></blockquote>\n<h1 id=\"1-sync-WaitGroup传递方式不当导致negative-counter\"><a href=\"#1-sync-WaitGroup传递方式不当导致negative-counter\" class=\"headerlink\" title=\"1. sync.WaitGroup传递方式不当导致negative counter\"></a>1. sync.WaitGroup传递方式不当导致negative counter</h1><h2 id=\"错误代码\"><a href=\"#错误代码\" class=\"headerlink\" title=\"错误代码\"></a>错误代码</h2><pre class=\"line-numbers language-go\" data-language=\"go\"><code class=\"language-go\"><span class=\"token keyword\">package</span> main\n\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">(</span>\n\t<span class=\"token string\">\"sync\"</span>\n\t<span class=\"token string\">\"time\"</span>\n<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">func</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\tch <span class=\"token operator\">:=</span> <span class=\"token function\">make</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">chan</span> <span class=\"token keyword\">struct</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span>\n\twg <span class=\"token operator\">:=</span> sync<span class=\"token punctuation\">.</span>WaitGroup<span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">go</span> <span class=\"token function\">Println</span><span class=\"token punctuation\">(</span>ch<span class=\"token punctuation\">,</span> wg<span class=\"token punctuation\">)</span>\n\t<span class=\"token keyword\">go</span> <span class=\"token function\">Insert</span><span class=\"token punctuation\">(</span><span class=\"token number\">100</span><span class=\"token punctuation\">,</span> ch<span class=\"token punctuation\">,</span> wg<span class=\"token punctuation\">)</span>\n\twg<span class=\"token punctuation\">.</span><span class=\"token function\">Wait</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">func</span> <span class=\"token function\">Println</span><span class=\"token punctuation\">(</span>ch <span class=\"token keyword\">chan</span> <span class=\"token keyword\">struct</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> wg sync<span class=\"token punctuation\">.</span>WaitGroup<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\tindex <span class=\"token operator\">:=</span> <span class=\"token number\">1</span>\n\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">select</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">case</span> <span class=\"token operator\">&lt;-</span>ch<span class=\"token punctuation\">:</span>\n\t\t\t<span class=\"token function\">println</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">)</span>\n\t\t\tindex<span class=\"token operator\">++</span>\n\t\t\twg<span class=\"token punctuation\">.</span><span class=\"token function\">Done</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\t\t<span class=\"token keyword\">default</span><span class=\"token punctuation\">:</span>\n\t\t\t<span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"wait for printing...\"</span><span class=\"token punctuation\">)</span>\n\t\t\ttime<span class=\"token punctuation\">.</span><span class=\"token function\">Sleep</span><span class=\"token punctuation\">(</span>time<span class=\"token punctuation\">.</span>Millisecond<span class=\"token punctuation\">)</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">func</span> <span class=\"token function\">Insert</span><span class=\"token punctuation\">(</span>times <span class=\"token builtin\">int</span><span class=\"token punctuation\">,</span> ch <span class=\"token keyword\">chan</span> <span class=\"token keyword\">struct</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> wg sync<span class=\"token punctuation\">.</span>WaitGroup<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">for</span> i <span class=\"token operator\">:=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> times<span class=\"token punctuation\">;</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">select</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">case</span> ch <span class=\"token operator\">&lt;-</span> <span class=\"token keyword\">struct</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">:</span>\n\t\t\ti<span class=\"token operator\">++</span>\n\t\t\twg<span class=\"token punctuation\">.</span><span class=\"token function\">Add</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n\t\t<span class=\"token keyword\">default</span><span class=\"token punctuation\">:</span>\n\t\t\t<span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"wait for inserting...\"</span><span class=\"token punctuation\">)</span>\n\t\t\ttime<span class=\"token punctuation\">.</span><span class=\"token function\">Sleep</span><span class=\"token punctuation\">(</span>time<span class=\"token punctuation\">.</span>Millisecond<span class=\"token punctuation\">)</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"报错信息\"><a href=\"#报错信息\" class=\"headerlink\" title=\"报错信息\"></a>报错信息</h2><pre class=\"line-numbers language-txt\" data-language=\"txt\"><code class=\"language-txt\">panic: sync: negative WaitGroup counter\n\ngoroutine 3 [running]:\nsync.(*WaitGroup).Add(0x1400009a000, 0xffffffffffffffff)\n        /opt/homebrew/Cellar/go/1.17.8/libexec/src/sync/waitgroup.go:74 +0x14c\nsync.(*WaitGroup).Done(...)\n        /opt/homebrew/Cellar/go/1.17.8/libexec/src/sync/waitgroup.go:99\nmain.Println(0x140000160c0, {{}, {0x0, 0x1, 0x0}})\n        $ProjectPath/main.go:24 +0x94\ncreated by main.main\n        $ProjectPath/main.go:12 +0x98\n\nProcess finished with the exit code 2<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"错误原因\"><a href=\"#错误原因\" class=\"headerlink\" title=\"错误原因\"></a>错误原因</h2><p>查询了一下资料后<a href=\"https://zhuanlan.zhihu.com/p/75441551\">^1</a>，发现此错误的原因是<code>sync.WaitGroup</code>在参数传递时应该使用指针传递地址，如果直接传值则会发生拷贝，此时传入的<code>WaitGroup</code>并不会被另一个go程修改</p>\n<p>此处也触发了一个啸啸的知识盲区，因为一前用slice和interface的时候特别顺手，其传递实际上传递的是共享的指针，仔细查阅了<a href=\"https://zhuanlan.zhihu.com/p/75441551\">^1</a>以后才发现，go参数传值是传递的拷贝，但是因为上面那些结构实际上有指向实际位置的指针，导致虽然传递的是拷贝，但是还是能对原参数进行修改，以后在编程时需要留心这一点避免造成内存泄漏。</p>\n<p>此处也挂一下引申的阅读资料： Go函数参数传递<a href=\"https://blog.csdn.net/qq_34556414/article/details/123062914\">^2</a></p>\n<h2 id=\"错误更正\"><a href=\"#错误更正\" class=\"headerlink\" title=\"错误更正\"></a>错误更正</h2><p>只需修改<code>Println</code>和<code>Insert</code>两个函数参数即可</p>\n<pre class=\"line-numbers language-go\" data-language=\"go\"><code class=\"language-go\"><span class=\"token comment\">// ... code before</span>\n\n<span class=\"token keyword\">func</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    ch <span class=\"token operator\">:=</span> <span class=\"token function\">make</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">chan</span> <span class=\"token keyword\">struct</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span>\n    wg <span class=\"token operator\">:=</span> <span class=\"token operator\">&amp;</span>sync<span class=\"token punctuation\">.</span>WaitGroup<span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">go</span> <span class=\"token function\">Println</span><span class=\"token punctuation\">(</span>ch<span class=\"token punctuation\">,</span> wg<span class=\"token punctuation\">)</span>\n\t<span class=\"token keyword\">go</span> <span class=\"token function\">Insert</span><span class=\"token punctuation\">(</span><span class=\"token number\">100</span><span class=\"token punctuation\">,</span> ch<span class=\"token punctuation\">,</span> wg<span class=\"token punctuation\">)</span>\n\twg<span class=\"token punctuation\">.</span><span class=\"token function\">Wait</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">func</span> <span class=\"token function\">Println</span><span class=\"token punctuation\">(</span>ch <span class=\"token keyword\">chan</span> <span class=\"token keyword\">struct</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> wg <span class=\"token operator\">*</span>sync<span class=\"token punctuation\">.</span>WaitGroup<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// ...implements</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">func</span> <span class=\"token function\">Insert</span><span class=\"token punctuation\">(</span>times <span class=\"token builtin\">int</span><span class=\"token punctuation\">,</span> ch <span class=\"token keyword\">chan</span> <span class=\"token keyword\">struct</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> wg sync<span class=\"token punctuation\">.</span>WaitGroup<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// ...implements</span>\n<span class=\"token punctuation\">}</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h1 id=\"2-sync-WaitGroup在go程内操作不当导致未能阻塞住主进程\"><a href=\"#2-sync-WaitGroup在go程内操作不当导致未能阻塞住主进程\" class=\"headerlink\" title=\"2. sync.WaitGroup在go程内操作不当导致未能阻塞住主进程\"></a>2. sync.WaitGroup在go程内操作不当导致未能阻塞住主进程</h1><h2 id=\"错误代码-1\"><a href=\"#错误代码-1\" class=\"headerlink\" title=\"错误代码\"></a>错误代码</h2><pre class=\"line-numbers language-go\" data-language=\"go\"><code class=\"language-go\"><span class=\"token keyword\">package</span> main\n\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">(</span>\n\t<span class=\"token string\">\"sync\"</span>\n\t<span class=\"token string\">\"time\"</span>\n<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">func</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\tch <span class=\"token operator\">:=</span> <span class=\"token function\">make</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">chan</span> <span class=\"token keyword\">struct</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span>\n\twg <span class=\"token operator\">:=</span> sync<span class=\"token punctuation\">.</span>WaitGroup<span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n\twg<span class=\"token punctuation\">.</span><span class=\"token function\">Add</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token keyword\">go</span> <span class=\"token function\">Println</span><span class=\"token punctuation\">(</span>ch<span class=\"token punctuation\">,</span> wg<span class=\"token punctuation\">)</span>\n\t<span class=\"token keyword\">go</span> <span class=\"token function\">Insert</span><span class=\"token punctuation\">(</span><span class=\"token number\">100</span><span class=\"token punctuation\">,</span> ch<span class=\"token punctuation\">,</span> wg<span class=\"token punctuation\">)</span>\n\twg<span class=\"token punctuation\">.</span><span class=\"token function\">Wait</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">func</span> <span class=\"token function\">Println</span><span class=\"token punctuation\">(</span>ch <span class=\"token keyword\">chan</span> <span class=\"token keyword\">struct</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> wg sync<span class=\"token punctuation\">.</span>WaitGroup<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\tindex <span class=\"token operator\">:=</span> <span class=\"token number\">1</span>\n\t<span class=\"token keyword\">for</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">select</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">case</span> <span class=\"token operator\">&lt;-</span>ch<span class=\"token punctuation\">:</span>\n\t\t\t<span class=\"token function\">println</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">)</span>\n\t\t\tindex<span class=\"token operator\">++</span>\n\t\t\twg<span class=\"token punctuation\">.</span><span class=\"token function\">Done</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\t\t<span class=\"token keyword\">default</span><span class=\"token punctuation\">:</span>\n\t\t\t<span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"wait for printing...\"</span><span class=\"token punctuation\">)</span>\n\t\t\ttime<span class=\"token punctuation\">.</span><span class=\"token function\">Sleep</span><span class=\"token punctuation\">(</span>time<span class=\"token punctuation\">.</span>Millisecond<span class=\"token punctuation\">)</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">func</span> <span class=\"token function\">Insert</span><span class=\"token punctuation\">(</span>times <span class=\"token builtin\">int</span><span class=\"token punctuation\">,</span> ch <span class=\"token keyword\">chan</span> <span class=\"token keyword\">struct</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> wg sync<span class=\"token punctuation\">.</span>WaitGroup<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">for</span> i <span class=\"token operator\">:=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> times<span class=\"token punctuation\">;</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">select</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">case</span> ch <span class=\"token operator\">&lt;-</span> <span class=\"token keyword\">struct</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">:</span>\n\t\t\ti<span class=\"token operator\">++</span>\n\t\t\twg<span class=\"token punctuation\">.</span><span class=\"token function\">Add</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n\t\t<span class=\"token keyword\">default</span><span class=\"token punctuation\">:</span>\n\t\t\t<span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"wait for inserting...\"</span><span class=\"token punctuation\">)</span>\n\t\t\ttime<span class=\"token punctuation\">.</span><span class=\"token function\">Sleep</span><span class=\"token punctuation\">(</span>time<span class=\"token punctuation\">.</span>Millisecond<span class=\"token punctuation\">)</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"报错信息-1\"><a href=\"#报错信息-1\" class=\"headerlink\" title=\"报错信息\"></a>报错信息</h2><p>无报错信息，但是程序会提前退出</p>\n<h2 id=\"错误原因-1\"><a href=\"#错误原因-1\" class=\"headerlink\" title=\"错误原因\"></a>错误原因</h2><p>在<code>Insert</code>函数中，成功往chanel内写入了一个信号，便会触发一次<code>WaitGroup.Add()</code>，但是同时，在<code>Println</code>函数中，成功打印了一个数字，也会触发一次<code>WaitGroup.Done()</code>，有可能出现<code>Insert</code>写入次数与<code>Println</code>打印次数相等的时候，此时<code>WaitGroup</code>的计数器为0，<code>main</code>中的<code>WaitGroup.Wait()</code>便不会阻塞程序，导致程序意外结束运行，而两个go程没有达到预期的作业效果</p>\n<h2 id=\"错误更正-1\"><a href=\"#错误更正-1\" class=\"headerlink\" title=\"错误更正\"></a>错误更正</h2><p>需要将生产者<code>Insert</code>的操作也当作一次作业完成，并且在<code>WaitGroup</code>被创建时，也需要将计数器+1直到生产者将总作业数设置完毕，以防生产者<code>Insert</code>函数和消费者<code>Println</code>函数都未正式执行时，<code>main</code>函数执行到了<code>WaitGroup.Wait()</code>，此时计数器依旧为0，程序依然会意外退出</p>\n<pre class=\"line-numbers language-go\" data-language=\"go\"><code class=\"language-go\"><span class=\"token comment\">// ... code before</span>\n\n<span class=\"token keyword\">func</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    ch <span class=\"token operator\">:=</span> <span class=\"token function\">make</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">chan</span> <span class=\"token keyword\">struct</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span>\n    wg <span class=\"token operator\">:=</span> <span class=\"token operator\">&amp;</span>sync<span class=\"token punctuation\">.</span>WaitGroup<span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n    wg<span class=\"token punctuation\">.</span><span class=\"token function\">Add</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token keyword\">go</span> <span class=\"token function\">Println</span><span class=\"token punctuation\">(</span>ch<span class=\"token punctuation\">,</span> wg<span class=\"token punctuation\">)</span>\n\t<span class=\"token keyword\">go</span> <span class=\"token function\">Insert</span><span class=\"token punctuation\">(</span><span class=\"token number\">100</span><span class=\"token punctuation\">,</span> ch<span class=\"token punctuation\">,</span> wg<span class=\"token punctuation\">)</span>\n\twg<span class=\"token punctuation\">.</span><span class=\"token function\">Wait</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">func</span> <span class=\"token function\">Insert</span><span class=\"token punctuation\">(</span>times <span class=\"token builtin\">int</span><span class=\"token punctuation\">,</span> ch <span class=\"token keyword\">chan</span> <span class=\"token keyword\">struct</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> wg <span class=\"token operator\">*</span>sync<span class=\"token punctuation\">.</span>WaitGroup<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    wg<span class=\"token punctuation\">.</span><span class=\"token function\">Add</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token operator\">*</span>times<span class=\"token punctuation\">)</span>\n    wg<span class=\"token punctuation\">.</span><span class=\"token function\">Done</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">for</span> i <span class=\"token operator\">:=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> times<span class=\"token punctuation\">;</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">select</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">case</span> ch <span class=\"token operator\">&lt;-</span> <span class=\"token keyword\">struct</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">:</span>\n\t\t\ti<span class=\"token operator\">++</span>\n\t\t\twg<span class=\"token punctuation\">.</span><span class=\"token function\">Done</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\t\t<span class=\"token keyword\">default</span><span class=\"token punctuation\">:</span>\n\t\t\t<span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"wait for inserting...\"</span><span class=\"token punctuation\">)</span>\n\t\t\ttime<span class=\"token punctuation\">.</span><span class=\"token function\">Sleep</span><span class=\"token punctuation\">(</span>time<span class=\"token punctuation\">.</span>Millisecond<span class=\"token punctuation\">)</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// ... code after</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h1 id=\"引用文章\"><a href=\"#引用文章\" class=\"headerlink\" title=\"引用文章\"></a>引用文章</h1><ol>\n<li><a href=\"https://zhuanlan.zhihu.com/p/75441551\">你真的会用sync.WaitGroup吗 - gnehsbc</a></li>\n<li><a href=\"https://blog.csdn.net/qq_34556414/article/details/123062914\">Go函数参数传递 - 富士康质检员张全蛋</a></li>\n</ol>\n<span id=\"more\"></span>\n\n","text":" 此处所使用的代码均为演示出现的错误 1. sync.WaitGroup传递方式不当导致negative counter错误代码package main import ( \"sync\" \"time\" ) func main() { ch := make(chan struct{}...","link":"","photos":[],"count_time":{"symbolsCount":"3.4k","symbolsTime":"3 mins."},"categories":[{"name":"blog","slug":"blog","count":10,"path":"api/categories/blog.json"}],"tags":[{"name":"Golang","slug":"Golang","count":8,"path":"api/tags/Golang.json"},{"name":"Concurrency","slug":"Concurrency","count":1,"path":"api/tags/Concurrency.json"},{"name":"sync.WaitGroup","slug":"sync-WaitGroup","count":1,"path":"api/tags/sync-WaitGroup.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#1-sync-WaitGroup%E4%BC%A0%E9%80%92%E6%96%B9%E5%BC%8F%E4%B8%8D%E5%BD%93%E5%AF%BC%E8%87%B4negative-counter\"><span class=\"toc-text\">1. sync.WaitGroup传递方式不当导致negative counter</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E9%94%99%E8%AF%AF%E4%BB%A3%E7%A0%81\"><span class=\"toc-text\">错误代码</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%8A%A5%E9%94%99%E4%BF%A1%E6%81%AF\"><span class=\"toc-text\">报错信息</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E9%94%99%E8%AF%AF%E5%8E%9F%E5%9B%A0\"><span class=\"toc-text\">错误原因</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E9%94%99%E8%AF%AF%E6%9B%B4%E6%AD%A3\"><span class=\"toc-text\">错误更正</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#2-sync-WaitGroup%E5%9C%A8go%E7%A8%8B%E5%86%85%E6%93%8D%E4%BD%9C%E4%B8%8D%E5%BD%93%E5%AF%BC%E8%87%B4%E6%9C%AA%E8%83%BD%E9%98%BB%E5%A1%9E%E4%BD%8F%E4%B8%BB%E8%BF%9B%E7%A8%8B\"><span class=\"toc-text\">2. sync.WaitGroup在go程内操作不当导致未能阻塞住主进程</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E9%94%99%E8%AF%AF%E4%BB%A3%E7%A0%81-1\"><span class=\"toc-text\">错误代码</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%8A%A5%E9%94%99%E4%BF%A1%E6%81%AF-1\"><span class=\"toc-text\">报错信息</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E9%94%99%E8%AF%AF%E5%8E%9F%E5%9B%A0-1\"><span class=\"toc-text\">错误原因</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E9%94%99%E8%AF%AF%E6%9B%B4%E6%AD%A3-1\"><span class=\"toc-text\">错误更正</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E5%BC%95%E7%94%A8%E6%96%87%E7%AB%A0\"><span class=\"toc-text\">引用文章</span></a></li></ol>","author":{"name":"𝚂𝚞𝚗𝚒𝚜𝚝𝙲","slug":"blog-author","avatar":"/assets/img/favicon.png","link":"/","description":"𝚂𝚞𝚗𝚒𝚜𝚝𝙲 is a pigeon from SouthWest University","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/assets/svg/bilibili.svg","link":"https://space.bilibili.com/25394898"},"live":{"icon":"/assets/svg/live.svg","link":"https://live.bilibili.com/5184681"},"github":{"icon":"/assets/svg/github.svg","link":"https://github.com/sunist-c"},"institution":{"icon":"/assets/svg/institution.svg","link":"https://github.com/swu-acm-lab"},"outlook":{"icon":"/assets/svg/outlook.svg","link":"mailto:sunist@mail.swu-acm.cn"}}}},"mapped":true,"prev_post":{"title":"CeobeBot插件 - 明日方舟模块","uid":"ad6656b837719f2ab38e772bf34bead7","slug":"CeobeBot-ArknightsPlugin","date":"2022-04-01T08:52:36.000Z","updated":"2022-04-06T15:31:53.521Z","comments":true,"path":"api/articles/CeobeBot-ArknightsPlugin.json","keywords":null,"cover":"https://camo.githubusercontent.com/6118a165f861b8337353b7ae7af62e976435029e0db70f243f34c5bcedc719f3/68747470733a2f2f7a332e617831782e636f6d2f323032312f31302f31342f3551316d336e2e706e67","text":" 本blog供CeobeBot相关维护者开发插件时参考，本插件的实际仓库地址为：SchwarzPlatform::VCS(请使用实验室网络访问)，外部仓库地址为: GitHub，镜像地址为: Gitea。外部仓库与镜像仓库的更新可能不及时 1. 设计思路1.1 Arknights...","link":"","photos":[],"count_time":{"symbolsCount":"9.4k","symbolsTime":"9 mins."},"categories":[{"name":"blog","slug":"blog","count":10,"path":"api/categories/blog.json"}],"tags":[{"name":"Backend","slug":"Backend","count":6,"path":"api/tags/Backend.json"},{"name":"Golang","slug":"Golang","count":8,"path":"api/tags/Golang.json"},{"name":"CeobeBot","slug":"CeobeBot","count":2,"path":"api/tags/CeobeBot.json"},{"name":"Arknights","slug":"Arknights","count":1,"path":"api/tags/Arknights.json"}],"author":{"name":"𝚂𝚞𝚗𝚒𝚜𝚝𝙲","slug":"blog-author","avatar":"/assets/img/favicon.png","link":"/","description":"𝚂𝚞𝚗𝚒𝚜𝚝𝙲 is a pigeon from SouthWest University","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/assets/svg/bilibili.svg","link":"https://space.bilibili.com/25394898"},"live":{"icon":"/assets/svg/live.svg","link":"https://live.bilibili.com/5184681"},"github":{"icon":"/assets/svg/github.svg","link":"https://github.com/sunist-c"},"institution":{"icon":"/assets/svg/institution.svg","link":"https://github.com/swu-acm-lab"},"outlook":{"icon":"/assets/svg/outlook.svg","link":"mailto:sunist@mail.swu-acm.cn"}}}}},"next_post":{"title":"飞书小程序同步课表与日历","uid":"b8d46bdb901a3fa647b17fec08a37916","slug":"LarkCalendarProgram","date":"2021-12-03T06:31:32.000Z","updated":"2022-04-03T08:48:39.169Z","comments":true,"path":"api/articles/LarkCalendarProgram.json","keywords":null,"cover":"https://img2.baidu.com/it/u=4249469460,464303751&fm=253&fmt=auto&app=120&f=JPEG?w=1278&h=704","text":" 飞书更新了API，程序目前无法运行，尚在FIX 1. 准备工作1.1 创建飞书小程序略 1.2 给机器人添加相应权限略 1.3 分析课表结构西南大学教务系统返回的课表可以在开发者工具中看到具体数据，是json格式的一个文件。 由于西南大学教务系统的鉴权流程过于阴间，我们至今未能...","link":"","photos":[],"count_time":{"symbolsCount":"3.3k","symbolsTime":"3 mins."},"categories":[{"name":"blog","slug":"blog","count":10,"path":"api/categories/blog.json"}],"tags":[{"name":"lark","slug":"lark","count":2,"path":"api/tags/lark.json"},{"name":"Backend","slug":"Backend","count":6,"path":"api/tags/Backend.json"},{"name":"Golang","slug":"Golang","count":8,"path":"api/tags/Golang.json"}],"author":{"name":"𝚂𝚞𝚗𝚒𝚜𝚝𝙲","slug":"blog-author","avatar":"/assets/img/favicon.png","link":"/","description":"𝚂𝚞𝚗𝚒𝚜𝚝𝙲 is a pigeon from SouthWest University","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/assets/svg/bilibili.svg","link":"https://space.bilibili.com/25394898"},"live":{"icon":"/assets/svg/live.svg","link":"https://live.bilibili.com/5184681"},"github":{"icon":"/assets/svg/github.svg","link":"https://github.com/sunist-c"},"institution":{"icon":"/assets/svg/institution.svg","link":"https://github.com/swu-acm-lab"},"outlook":{"icon":"/assets/svg/outlook.svg","link":"mailto:sunist@mail.swu-acm.cn"}}}}}}